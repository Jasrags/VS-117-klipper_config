[display]
lcd_type: uc1701
cs_pin: PB8
a0_pin: PB15
rst_pin: PB9
encoder_pins: ^PA9,^PA10
click_pin: ^!PB5
contrast: 63
spi_software_sclk_pin: PA5
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
# display_group: __voron_display

#####################################################################
# 	Splashscreen definition
#####################################################################
# [include splash.cfg]

#####################################################################
# 	Glyph definition
#####################################################################

[display_glyph chamber]
data:
  ................
  ****************
  *....*....*....*
  *....*....*....*
  *....******....*
  *..............*
  *..............*
  *.....****.....*
  *.***.*..*.***.*
  *.....****.....*
  *......**......*
  *..............*
  *.************.*
  *...*......*...*
  ****************
  ................

[display_glyph voron]
data:
 ......***.......
 ....*******.....
 ...*********....
 .*************..
 *****..***..***.
 ****..***..****.
 ***..***..*****.
 **..***..******.
 ******..***..**.
 *****..***..***.
 ****..***..****.
 ***..***..*****.
 .*************..
 ...*********....
 ....*******.....
 ......***.......

[display_glyph voroninv]
data:
  0000001110000000
  0000111111100000
  0001111111110000
  0111111111111100
  1111100111001110
  1111001110011110
  1110011100111110
  1100111001111110
  1111110011100110
  1111100111001110
  1111001110011110
  1110011100111110
  0111111111111100
  0001111111110000
  0000111111100000
  0000001110000000

[display_glyph voron_heart]
data:
 ................
 ..****...*****..
 .**************.
 ******..**..****
 *****..**..*****
 ****..**..******
 *******..*******
 .*****..**..***.
 .****..**..****.
 ..**..**..****..
 ...**********...
 ....********....
 .....******.....
 ......****......
 .......**.......
 ................

[display_glyph ercfcarrot]
data:
 ........***.....
 ***....***......
 .**....**.......
 .****..**.......
 ...**..*........
 ...***.*..**....
 .........***....
 ..****..***.....
 ****...***..*...
 ***...***..***..
 **...***..***...
 ......*..***..*.
 ........***..**.
 .........*..***.
 ............***.
 ................

#####################################################################
# 	Display Data definition
#####################################################################

[display_template _vheater_temperature]
param_heater_name: "extruder"
text:
  {% if param_heater_name in printer %}
    {% set heater = printer[param_heater_name] %}
    # Show glyph
    {% if param_heater_name == "heater_bed" %}
      {% if heater.target %}
        {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
        ~bed_heat{frame}~
      {% else %}
        ~bed~
      {% endif %}
    {% else %}
      ~extruder~
    {% endif %}
    # Show temperature
    { "%3.0f" % (heater.temperature,) }
    # Optionally show target
    {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (heater.target,) }
    {% endif %}
    ~degrees~
  {% endif %}

[display_data __voron_display extruder]
position: 0, 0
text: { render("_vheater_temperature", param_heater_name="extruder") }

[display_data __voron_display fan]
position: 0, 10
text:
  {% if 'fan' in printer %}
    {% set speed = printer.fan.speed %}
    {% if speed %}
      {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}
    { "{:>4.0%}".format(speed) }
  {% endif %}

[display_data __voron_display bed]
position: 1, 0
text: { render("_vheater_temperature", param_heater_name="heater_bed") }

[display_data __voron_display progress_text]
position: 1, 10
text:
  {% set progress = printer.display_status.progress %}
  { "{:^6.0%}".format(progress) }
  
[display_data __voron_display progress_text2]
position: 1, 10
text:
  {% set progress = printer.display_status.progress %}
  { draw_progress_bar(1, 10, 6, progress) }

[display_data __voron_display printing_time]
position: 2, 10
text:
  {% set ptime = printer.idle_timeout.printing_time %}
  { "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }

#########################################################
# This section defines the actual chamber temp. field,
# replace 'temperature_sensor chamber' as necessary
#########################################################
[display_data __voron_display chamber]
position: 2, 0
text:
  {% set chamber = printer['temperature_sensor chamber'] %}
  {% set frame_temp = printer['temperature_sensor frame'] %}
	~chamber~ { "%2.0f" % (frame_temp.temperature,) }/{ "%2.0f" % (chamber.temperature,) }~degrees~

[display_data __voron_display print_status]
position: 3, 0
text: 
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set pos = printer.toolhead.position %}
    { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
  {% else %}
    { "V2.1473" }
  {% endif %}

[display_data __voron_display voron_logo]
position: 3, 10
text:
  {% if printer.display_status.message %}
  {% elif printer.idle_timeout.printing_time %}
  {% else %}
    ~voron~
    ~voron_heart~
    ~ercfcarrot~
  {% endif %}

#####################################################################
# 	LCD Macro
#####################################################################

[delayed_gcode LCD_INIT_KNOB]
initial_duration: 1
gcode:
  _LCD_KNOB COLOR=BLUE

[delayed_gcode LCD_INIT_OFF]
initial_duration: 10
gcode:
  SET_GCODE_VARIABLE MACRO=DISPLAY VARIABLE=state VALUE='"off"'
  SET_LED LED=display_lights RED=0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1

[gcode_macro _LCD_KNOB]
variable_color: 'BLUE'
variable_restore: 'BLUE'
variable_index: 2
variable_blink: 0
gcode:
  # set default parameter value
  {% set time = params.BLINK|default(0)|float %}
  {% set var_color=printer["gcode_macro _LCD_KNOB"].color %}
  {% set var_restore=printer["gcode_macro _LCD_KNOB"].restore %}
  SET_GCODE_VARIABLE MACRO=_LCD_KNOB VARIABLE=blink VALUE={time}
  UPDATE_DELAYED_GCODE ID=_BLINK_DELAY DURATION={time}
  SET_GCODE_VARIABLE MACRO=_LCD_KNOB VARIABLE=restore VALUE='"{var_color}"'
  {% if params.COLOR == 'GREEN'%}
    SET_GCODE_VARIABLE MACRO=_LCD_KNOB VARIABLE=color VALUE='"GREEN"'
    SET_LED LED=display_lights RED=0 GREEN=0.3 BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=display_lights RED=0 GREEN=0.3 BLUE=0 INDEX=3 TRANSMIT=1
  {% elif params.COLOR == 'RED'%}
    SET_GCODE_VARIABLE MACRO=_LCD_KNOB VARIABLE=color VALUE='"RED"'
    SET_LED LED=display_lights RED=0.5 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=display_lights RED=0.5 GREEN=0 BLUE=0 INDEX=3 TRANSMIT=1
  {% elif params.COLOR == 'BLUE'%}
    SET_GCODE_VARIABLE MACRO=_LCD_KNOB VARIABLE=color VALUE='"BLUE"'
    SET_LED LED=display_lights RED=0 GREEN=0 BLUE=0.5 INDEX=2 TRANSMIT=0
    SET_LED LED=display_lights RED=0 GREEN=0 BLUE=0.5 INDEX=3 TRANSMIT=1
  {% else %}
    {% if var_restore == 'GREEN'%}
      SET_GCODE_VARIABLE MACRO=_LCD_KNOB VARIABLE=color VALUE='"GREEN"'
      SET_LED LED=display_lights RED=0 GREEN=0.3 BLUE=0 INDEX=2 TRANSMIT=0
      SET_LED LED=display_lights RED=0 GREEN=0.3 BLUE=0 INDEX=3 TRANSMIT=1
    {% elif var_restore == 'RED'%}
      SET_GCODE_VARIABLE MACRO=_LCD_KNOB VARIABLE=color VALUE='"RED"'
      SET_LED LED=display_lights RED=0.5 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
      SET_LED LED=display_lights RED=0.5 GREEN=0 BLUE=0 INDEX=3 TRANSMIT=1
    {% elif var_restore == 'BLUE'%}
      SET_GCODE_VARIABLE MACRO=_LCD_KNOB VARIABLE=color VALUE='"BLUE"'
      SET_LED LED=display_lights RED=0 GREEN=0 BLUE=0.5 INDEX=2 TRANSMIT=0
      SET_LED LED=display_lights RED=0 GREEN=0 BLUE=0.5 INDEX=3 TRANSMIT=1
    {% endif %}
  {% endif %}
  
[delayed_gcode _BLINK_DELAY]
gcode:
  {% set var_color=printer["gcode_macro _LCD_KNOB"].color %}
  {% if printer["gcode_macro _LCD_KNOB"].index|int == 2 %}
    SET_GCODE_VARIABLE MACRO=_LCD_KNOB VARIABLE=index VALUE=3
    {% if var_color == 'GREEN'%}
      SET_LED LED=display_lights RED=0.0 GREEN=0.3 BLUE=0.0 INDEX=2 TRANSMIT=0
      SET_LED LED=display_lights RED=0.0 GREEN=0.0 BLUE=0.0 INDEX=3 TRANSMIT=1
    {% elif var_color == 'RED'%}
      SET_LED LED=display_lights RED=0.5 GREEN=0.0 BLUE=0.0 INDEX=2 TRANSMIT=0
      SET_LED LED=display_lights RED=0.0 GREEN=0.0 BLUE=0.0 INDEX=3 TRANSMIT=1
    {% elif var_color == 'BLUE'%}
      SET_LED LED=display_lights RED=0.0 GREEN=0.0 BLUE=0.5 INDEX=2 TRANSMIT=0
      SET_LED LED=display_lights RED=0.0 GREEN=0.0 BLUE=0.0 INDEX=3 TRANSMIT=1
    {% endif %}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_LCD_KNOB VARIABLE=index VALUE=2
    {% if var_color == 'GREEN'%}
      SET_LED LED=display_lights RED=0.0 GREEN=0.0 BLUE=0.0 INDEX=2 TRANSMIT=0
      SET_LED LED=display_lights RED=0.0 GREEN=0.3 BLUE=0.0 INDEX=3 TRANSMIT=1
    {% elif var_color == 'RED'%}
      SET_LED LED=display_lights RED=0.0 GREEN=0.0 BLUE=0.0 INDEX=2 TRANSMIT=0
      SET_LED LED=display_lights RED=0.5 GREEN=0.0 BLUE=0.0 INDEX=3 TRANSMIT=1
    {% elif var_color == 'BLUE'%}
      SET_LED LED=display_lights RED=0.0 GREEN=0.0 BLUE=0.0 INDEX=2 TRANSMIT=0
      SET_LED LED=display_lights RED=0.0 GREEN=0.0 BLUE=0.5 INDEX=3 TRANSMIT=1
    {% endif %}
  {% endif %}
  UPDATE_DELAYED_GCODE ID=_BLINK_DELAY DURATION={printer["gcode_macro _LCD_KNOB"].blink|float}

[gcode_macro DISPLAY]
variable_state: 'on'
gcode:
  {% if printer["gcode_macro DISPLAY"].state == 'on' %}
    _DISPLAY_OFF
  {% else %}
    _DISPLAY_ON
  {% endif %}
    
[gcode_macro _DISPLAY_STATE]
gcode:
  {action_respond_info("LCD display %s" % (printer["gcode_macro DISPLAY"].state))}

[gcode_macro _DISPLAY_OFF]
## Display off to hinder burn in
gcode:
  SET_GCODE_VARIABLE MACRO=DISPLAY VARIABLE=state VALUE='"off"'
  SET_LED LED=display_lights RED=0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1
  _DISPLAY_STATE

[gcode_macro _DISPLAY_ON]
## Display on
gcode:
  SET_GCODE_VARIABLE MACRO=DISPLAY VARIABLE=state VALUE='"on"'
  SET_LED LED=display_lights RED=0.8 GREEN=0.8 BLUE=1.0 INDEX=1 TRANSMIT=1
  _DISPLAY_STATE	
