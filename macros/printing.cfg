# [gcode_macro PRINT_START]
# gcode:
#   # command params
#   {% set target_bed = params.BED|default(110)|int %}
#   {% set target_extruder = params.EXTRUDER|default(150)|int %}
#   {% set target_chamber = params.CHAMBER|default(0)|int %}
#   {% set filament_type = params.FILAMENT|default("ABS")|upper %}
#   {% set fl_size = params.SIZE|default("0_0_0_0")|string %}
#   # variables 
#   {% set plate_offset_z = printer.save_variables.variables.plate_array[printer.save_variables.variables.plate_index|int][1] %}
#   {% set plate_name = printer.save_variables.variables.plate_array[printer.save_variables.variables.plate_index|int][0] %}
#   {% set default_display_lights_color = printer['gcode_macro _USER_VARIABLE'].default_display_lights_color|lower %}
#   {% set default_case_lights_color = printer['gcode_macro _USER_VARIABLE'].default_case_lights_color|lower %}
#   {% set unretract_start = printer['gcode_macro _USER_VARIABLE'].unretract_start|float %}
#   # features
#   {% set ena_debug = printer.save_variables.variables.debug|lower %}
  
#   {% if ena_debug == "true" %}
#     {action_respond_info('==== PRINT_START ====')}
#     {action_respond_info("targets [bed: %s, extruder: %s, chamber: %s, filament_type: %s]" % (target_bed,target_extruder,target_chamber,filament_type))}
#     {action_respond_info("fl_size: %s" % (fl_size))}
#     {action_respond_info("default_lights_color: [display:%s,case:%s]" % (default_display_lights_color,default_case_lights_color))}
#     {action_respond_info("unretract_start: %s" % (unretract_start))}
#     {action_respond_info('===============')}
#   {% endif %}

#   blue

#   M117 Homing
#   G28

#   PREHEAT_CHAMBER BED={target_bed} CHAMBER={target_chamber} FILAMENT={filament_type}

#   CALIBRATE SIZE={fl_size}

#   M107 # Stop part cooling fan
#   M117 Heating ~extruder~: {target_extruder}~degrees~
#   M109 S{target_extruder} # Wait for extruder final temp

#   G1 Z5 F5000 # Move head 5mm from bed surface
#   G90 # Absolute Positioning
#   M83 # Make the E relative independant of other axis
#   G1 E{unretract_start} F1500 # Unretract filament
#   G92 E0 ; reset extruder

#   white
#   M117 Printing

# [gcode_macro PREHEAT_CHAMBER]
# gcode:
#   # command params
#   {% set target_bed = params.BED|default(110)|int %}
#   {% set target_extruder = params.EXTRUDER|default(150)|int %}
#   {% set target_chamber = params.CHAMBER|default(0)|int %}
#   {% set filament_type = params.FILAMENT|default("ABS")|upper %}
#   # variables 
#   {% set preheat_filament_types = printer['gcode_macro _USER_VARIABLE'].preheat_filament_types %}
#   {% set preheat_min_soak_time = printer['gcode_macro _USER_VARIABLE'].preheat_min_soak_time %}
#   {% set park_x = printer['gcode_macro _USER_VARIABLE'].center_x %}
#   {% set park_y = printer['gcode_macro _USER_VARIABLE'].center_y %}
#   {% set park_z = printer['gcode_macro _USER_VARIABLE'].z_min_delta|float %}
#   {% set default_display_lights_color = printer['gcode_macro _USER_VARIABLE'].default_display_lights_color|lower %}
#   {% set default_case_lights_color = printer['gcode_macro _USER_VARIABLE'].default_case_lights_color|lower %}
#   # features
#   {% set ena_debug = printer.save_variables.variables.debug|lower %}

#   {% if ena_debug == "true" %}
#     {action_respond_info('==== PREHEAT_CHAMBER ====')}
#     {action_respond_info("targets [bed: %s, extruder: %s, chamber: %s, filament_type: %s]" % (target_bed,target_extruder,target_chamber,filament_type))}
#     {action_respond_info("preheat_min_soak_time: %s" % (preheat_min_soak_time))}
#     {action_respond_info("park [x: %s,y: %s,z: %s" % (park_x,park_y,park_z))}
#     {action_respond_info("default_lights_color: [display:%s,case:%s]" % (default_display_lights_color,default_case_lights_color))}
#     {action_respond_info('===============')}
#   {% endif %}
  
#   orange
#   M117 Preheat Start
#   G90 # absolute positioning
#   G0 X{park_x} Y{park_y} Z{park_z} F18000

#   # Bring the extruder and bed up to targets
#   M104 S{target_extruder}
#   M117 Heating ~bed~{target_bed}~degrees~
#   M190 S{target_bed}       

#   # Chamber/time soak for some filament types
#   {% if filament_type in preheat_filament_types %}
#     M106 S255 # Turn on Part Cooling Fan to 100%
#     _CIRCULATION_START FILAMENT={filament_type}

#     # Timed bed soak
#     {% if preheat_min_soak_time > 0 %}
#       {% for timer in range(preheat_min_soak_time|int,0,-1) %}
#         M117 Soaking ~bed~ {timer|int}m 
#         M105
#         G4 P60000
#       {% endfor %}
#     {% endif %}

#     # Chamber soak
#     {% if printer['temperature_sensor chamber'] and target_chamber > 0 and printer['temperature_sensor chamber'].temperature < target_chamber %}
#       M117 Soaking ~chamber~ {target_chamber}~degrees~
#       TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}
#     {% endif %}
#   {% endif %}

#   M106 S128 # no ooze fan speed
#   blue

#   PUSHOVER_PREHEAT_COMPLETE
#   M117 Preheat Done

# [gcode_macro PRINT_END]
# gcode:
#   # command params
#   {% set target_bed = params.BED|default(110)|int %}
#   {% set target_extruder = params.EXTRUDER|default(150)|int %}
#   # variables 
#   {% set retract_end = printer['gcode_macro _USER_VARIABLE'].retract_end|float %}
#   {% set can_extrude = printer.extruder.can_extrude|lower %}
#   {% set min_x = printer.toolhead.axis_minimum.x|float %}
#   {% set min_y = printer.toolhead.axis_minimum.y|float %}
#   {% set max_y = printer.toolhead.axis_maximum.y|float %}
#   {% set max_z = printer.toolhead.axis_maximum.z|float %}
#   {% set boarder_delta = printer['gcode_macro _USER_VARIABLE'].boarder_delta|float %}
#   {% set park_end_x = printer['gcode_macro _USER_VARIABLE'].center_x %}
#   {% set park_end_y = max_y - boarder_delta %}
#   {% set default_display_lights_color = printer['gcode_macro _USER_VARIABLE'].default_display_lights_color|lower %}
#   {% set default_case_lights_color = printer['gcode_macro _USER_VARIABLE'].default_case_lights_color|lower %}
#   # features
#   {% set ena_debug = printer.save_variables.variables.debug|lower %}
  
#   {% if ena_debug == "true" %}
#     {action_respond_info('==== PRINT_END ====')}
#     {action_respond_info("retract_end: %s" % (retract_end))}
#     {action_respond_info("can_extrude: %s" % (can_extrude))}
#     {action_respond_info("min: [x:%s,y:%s]" % (min_x,min_y))}
#     {action_respond_info("max: [y:%s,z:%s]" % (max_y,max_z))}
#     {action_respond_info("boarder_delta: %s" % (boarder_delta))}
#     {action_respond_info("park_end: [x:%s,y:%s]" % (park_end_x,park_end_y))}
#     {action_respond_info("default_lights_color: [display:%s,case:%s]" % (default_display_lights_color,default_case_lights_color))}
#     {action_respond_info('===============')}
#   {% endif %}

#   M400  # wait for buffer to clear
#   {% if can_extrude == 'true' %}
#     G92 E0 ; reset extruder
#     G1 E-{retract_end} F3600  # retract filament
#   {% endif %}
#   G91 # relative positioning
#   G0 Z1.00 X20.0 Y20.0 F20000 # move nozzle to remove stringing

#   TURN_OFF_HEATERS

#   M107  # turn off fan
#   G1 Z2 F3000 # move nozzle up 2mm
#   G90 # absolute positioning
  
#   G0 X{park_end_x} Y{park_end_y} F18000 # park nozzle at rear 
#   M117 Print complete!
#   M84
#   BED_MESH_CLEAR
#   _CIRCULATION_END
  
#   PUSHOVER_PRINT_COMPLETE
#   blue

# [gcode_macro CANCEL_PRINT]
# rename_existing: BASE_CANCEL_PRINT
# gcode:
#   # command params
#   # variables 
#   {% set can_extrude = printer.extruder.can_extrude|lower %}

#   {% if can_extrude == 'true' %}
#     G92 E0 ; reset extruder
#   {% endif %}

#   TURN_OFF_HEATERS
#   CLEAR_PAUSE
#   SDCARD_RESET_FILE
#   PRINT_END
#   BASE_CANCEL_PRINT