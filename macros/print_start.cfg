[gcode_macro PRINT_START]
gcode:
  {% set bed = params.BED|default(60)|int %}
  {% set extruder = params.EXTRUDER|default(150)|int %}
  
  blue
  M117 Homing
  G28

  PREHEAT_CHAMBER BED={bed} EXTRUDER=150

  M117 Calibrating Mesh
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE LOAD=default

  M117 Heating ~extruder~: {extruder}~degrees~
  M109 S{extruder}                                                              # Wait for extruder final temp

  G1 Z5 F5000                                                                   # Move head 5mm from bed surface
  M83                                                                           # Make the E relative independant of other axis
  G1 E9 F1500                                                                   # Unretract filament
  RESET_EXTRUDER

  white
  M117 Printing



# [gcode_macro PRINT_START]
# ##  User Paramaters
# ##  BED_TEMP      : Target temperature for the Bed. Is also used to decide 
# ##                  if heatsoak is needed
# ##  EXTRUDER_TEMP : Target temperature for the Extruder
# ##  RETRACT_LEN   : Retract length for firmware retracts
# ##  RETRACT_SPD   : Retract speed for firmware retracts
# ##  System Varables
# variable_redo_qgl: 'true'
# # change this to define the wait time per call
# variable_extruder: 250
# variable_bed: 105
# variable_endstop: 0
# variable_retract_len: 0.75
# variable_retract_spd: 70
# ## Valid state 
# ##   Prepare : decision if heat Soak is needed 
# ##   HeatSoak: loop the time specified with SOAK
# ##   Final   : all what needs to be done after wait timet
# variable_state: 'Prepare'
# variable_first: 'true'
# variable_soak: 0.35
# variable_pwm: 1
# variable_avgpwm: 1
# variable_tests: 0
# variable_left: 30
# #variable_clean2: False
# gcode:
#   {% set bed_temp = params.BED_TEMP|default(105) %}
#   {% set extruder_temp= params.EXTRUDER_TEMP|default(250) %}
#   {% set chamber = params.CHAMBER_TEMP|default(50) %}
#   {% set soak = params.SOAK|default(0.35) %}
#   {% set retract_len = params.RETRACT_LEN|default(0.75) %}
#   {% set retract_spd = params.RETRACT_SPD|default(70) %}
#   {% set actBed = printer.heater_bed.temperature|float %}
#   {% set actPwm = printer.heater_bed.power|float %}
#     #############  Get user defines  #############
#   {% set center_x = printer['gcode_macro _user_vars'].center_x %}
#   {% set center_y = printer['gcode_macro _user_vars'].center_y %}
#   {% set z_min_delta = printer['gcode_macro _user_vars'].z_min_delta %}
#   {% set z_hop = printer['gcode_macro _user_vars'].z_hop %}
#   #############  Get hardware enables  #############
#   {% set ena_display_lights = printer['gcode_macro _user_vars'].neo_display|lower %}
#   {% set ena_chamber = printer['gcode_macro _user_vars'].chamber|lower %}
#   {% set ena_case_lights = printer['gcode_macro _user_vars'].case_lights|lower %}
#   {% set ena_filter = printer['gcode_macro _user_vars'].filter|lower %}
#   {% set ena_runout = printer['gcode_macro _user_vars'].runout|lower %}
#   {% set ena_relay = printer['gcode_macro _user_vars'].relay|lower %}
#   {% set ena_auto_z_offset = printer['gcode_macro _user_vars'].auto_z_offset|lower %}
#   # get max allow bed temp from config. Lower it by 5C to avoid shutdown
#   {% set cfg_bed_max = printer.configfile.settings.heater_bed.max_temp|int - 5 %}

#   {% if state == 'Prepare' %}  
#       _PRINT_AR T="Preparation stage"
#       SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=execute VALUE='"false"'
#       #SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=clean2 VALUE='"false"'
#       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=first VALUE='"true"'
#       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=extruder VALUE={extruder_temp|int}
#       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bed VALUE={bed_temp}
#       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=left VALUE=30
#       # check if filament is loaded 
#       # get filament state either use the safe variable or the runout sensor
#       {% if 'filament_switch_sensor runout' in printer.configfile.settings %}
#           {% if printer['filament_switch_sensor runout'].enabled|lower == 'true' %}
#               {% set filament_detected = printer['filament_switch_sensor runout'].filament_detected|lower %}
#           {% else %}
#               {% set filament_detected = printer.save_variables.variables.filament_loaded %}
#           {% endif %}
#       {% elif 'filament_motion_sensor runout' in printer.configfile.settings %}
#           {% if printer['filament_motion_sensor runout'].enabled|lower == 'true' %}
#               {% set filament_detected = printer['filament_motion_sensor runout'].filament_detected|lower %}
#           {% else %}
#               {% set filament_detected = printer.save_variables.variables.filament_loaded %}
#           {% endif %}
#       {% else %}
#           {% set filament_detected = printer.save_variables.variables.filament_loaded %}
#       {% endif %}
#       #if everything's OK then go on
#       {% if filament_detected == 'true' %}
# #           _CASELIGHT_ON
# #           {% if ena_filter == 'true' %} FILTER_ON {% endif %} ; activate filter
# #           {% if ena_display_lights == 'true' %} _LCD_KNOB COLOR=RED BLINK=1  {% endif %}
# #           {% if ena_chamber == 'fan' %} M141 S{vent_off} {% endif %}                  ; exhaust fan off
#           _CG28                    ; home if needed
#           # Move to Middle
# #           SET_RETRACTION RETRACT_LENGTH={retract_len|float} RETRACT_SPEED={retract_spd|int}
#           G90
#           G0 Z{z_min_delta} F1800           ; move nozzle to z high first
#           G0 X{center_x} Y{center_x} F18000 ; home to get toolhead in the middle 

#           _PRINT_AR T="Heating Bed"
# #           SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=redo_qgl VALUE='"true"'

# #           M106 S90              ; switch part cooling ~35% to move air in chamber
# #           M190 S{bed_temp|int}  ; heat bed and wait
#           M400                  ; wait for buffer to clear
# #           PAUSE_BASE
# #           {% set pwm = printer['heater_bed'].power | float %}
# #           SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=pwm VALUE={pwm}
# #           SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=avgpwm VALUE={pwm}
# #           SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=tests VALUE=1
# #           _PRINT_AR T="{"T:%02d/30 P:%.3f/%.3f" % (left|int,pwm|float,soak|float)}"
# #           # Call the wait macro the first time
# #           SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"HeatSoak"'
# #           UPDATE_DELAYED_GCODE ID=START_PRINT_WAIT DURATION=0.1

# #       {% else %}
# #           _PRINT_AR T="No Filament loaded, print canceled!"
# #           CANCEL_PRINT_BASE
# #           UPDATE_DELAYED_GCODE ID=_DELAY_SDCARD_RESET_FILE DURATION=1
# #       {% endif%}
      
#   {% elif state == 'HeatSoak' %}  
# #       {% if left == 0 %}
# #           {% if avgpwm >= soak|float %}
# #               SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=pwm VALUE=0
# #               SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=tests VALUE=0
# #               SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=left VALUE=30
# #           {% else %}
# #               {action_respond_info("Done. Mean PWM: %f" % (avgpwm|float))}
# #               SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Extruder"'
# #           {% endif %}
# #       {% endif %}
# #       UPDATE_DELAYED_GCODE ID=START_PRINT_WAIT DURATION=1
# #   {% elif state == 'Extruder' %}  
# #       _PRINT_AR T="Extruder stage"
# #       M109 S{extruder}
# #       _PRINT_AR T="Extruder is heating"
# #       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"QGL"'
# #       UPDATE_DELAYED_GCODE ID=START_PRINT_WAIT DURATION=0.1
# #   {% elif state == 'QGL' %}
# #       _PRINT_AR T="QGL stage"  
# #       # set staus back to prepare for the next run 
# #       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"'     
# #       M106 S0  ; turn off part cooling fan
# #        {% if ena_neo == 'true' %} _LCD_KNOB COLOR=RED  {% endif %}
# #       G21                                                       ; set units to millimeters
# #       G90                                                       ; use absolute coordinates
# #       M83                                                       ; use relative distances for extrusion
# #       #_PROBE_APPROACH
# #       {%  if printer.quad_gantry_level.applied %}
# #         _PRINT_AR T="QGL already done"
# #       {% else %}
# #         NOZZLECLEAN_DRY
# #         G32  ; home & QGL
# #       {% endif %}
# #       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"QGLC"'
# #       UPDATE_DELAYED_GCODE ID=START_PRINT_WAIT DURATION=1
# #   {% elif state == 'QGLC' %}
# #       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"'     
# #       _PRINT_AR T="QGL check stage"  
# #       #{% if printer.configfile.config["bed_mesh Voron-Bed_Temp-" + bed_temp|string + "C"] is defined %}
# #       #    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=clean2 VALUE='"true"'
# #       #{% endif %}
# #       {%  if printer.quad_gantry_level.applied %}
# #         _PRINT_AR T="QGL done successfully"
# #         {% if ena_chamber == 'fan' %} M141 S{chamber} {% endif %} ; set target temp for exhaust fan
# #         G10
# #         _PROBE_APPROACH
# #         BED_MESH_LOAD AUTO=true
# #         SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"ZCAL"'
# #         UPDATE_DELAYED_GCODE ID=START_PRINT_WAIT DURATION=0.1
# #       {% else %}
# #         SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"'     
# #         _PRINT_AR T="QGL failed, print canceled!"
# #         CANCEL_PRINT_BASE
# #         UPDATE_DELAYED_GCODE ID=_DELAY_SDCARD_RESET_FILE DURATION=1
# #       {% endif %}
# #   {% elif state == 'ZCAL' %}
# #       #RESUME_BASE
# #       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"'     
# #       NOZZLECLEAN_DRY
# #       #_PROBE_APPROACH
# #       G10
# #       G28 Z
# #       #G1 Z15 F900            ; move head up
# #       #CALIBRATE_Z ; Go through Z-offset calibration for current table
# #       M400
# #       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Final"'     
# #       UPDATE_DELAYED_GCODE ID=START_PRINT_WAIT DURATION=1
#   {% elif state == 'Final' %}
#       _PRINT_AR T="Final stage"
# #       RESUME_BASE  
# #       # set staus back to prepare for the next run 
# #       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"'     
# #         #{% set zcal = printer['z_calibration'].last_query %}
# #         #{% if zcal %}
# #         #  _PRINT_AR T="{"Z offset was calibrated to %.3f " % printer['z_calibration'].last_z_offset}"
# #           M117 Heating Extruder
# #           M109 S{extruder|int} ; heat extruder and wait
# #           PRIME_LINE
# #           G90                                                       ; use absolute coordinates
# #           M83                                                       ; use relative distances for extrusion 
# #           UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
# #           _PRINT_AR T="{"PRINT_START done. Endstop temp:%2.2fC" % (30)}" ##printer['temperature_sensor endstop'].temperature
# #           SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=endstop VALUE={30}
# #         #{% else %}
# #         #  _PRINT_AR T="Z calibration failed, print canceled!"
# #         #  CANCEL_PRINT_BASE
# #         #  UPDATE_DELAYED_GCODE ID=_DELAY_SDCARD_RESET_FILE DURATION=1
# #         #{% endif %}
#   {% endif %}

# ## Wait interval macro to break the loop
# [delayed_gcode START_PRINT_WAIT]
# gcode:
#  # Print remaining time
#   {% if printer["gcode_macro PRINT_START"].state == 'HeatSoak' %}
#       {% set pwm = printer['heater_bed'].power | float %}
#       {% set totalpwm = printer["gcode_macro PRINT_START"].pwm|float %}
#       {% set tests = printer["gcode_macro PRINT_START"].tests|int + 1 %}
#       {% set left = printer["gcode_macro PRINT_START"].left|int - 1 %}
#       {% set soak = printer["gcode_macro PRINT_START"].soak | float %}
#       {% set avgpwm = ((totalpwm+pwm)/tests)|float %}
#       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=avgpwm VALUE={avgpwm}
#       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=pwm VALUE={(totalpwm+pwm)|float}
#       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=tests VALUE={tests}
#       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=left VALUE={left}

#       M117 S{'T:%02d' % left|int}{'/30 P:%.2f' % (avgpwm|float)}{'/%.2f' % (soak|float)}
#   {% endif %}
#   # Check CANCLE_PRINT was executed
#   {% if printer["gcode_macro CANCEL_PRINT"].execute == 'false' %}
#     # Junp back to PRINT_START
#     PRINT_START
#   {% else %}
#     # break loop
#     # insure state is correct for the next print start
#     SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=execute VALUE='"false"'
#     SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"'
#     UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
#   {% endif %}