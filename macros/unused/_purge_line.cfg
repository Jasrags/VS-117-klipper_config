# [gcode_macro PURGE_LINE]
# #   A purge line on the left of the bed to prime the extruder
# gcode:
#   {% if printer['gcode_macro _USER_VARIABLE'].debug == 1 %}
#   {% endif %}
  
#   G92 E0                          # zero/reset extruder
#   G1 X2.2 Y20 Z0.3 F18000         # move to start position
#   G1 E+15 F150                    # extrude to put the pressure (-20 from purge macro)
#   G92 E0

#   G1 X2.2 Y200 Z0.25 F1500 E10    # extrude the first line
#   G1 X2.5 Y200 Z0.3 F18000        # move to side a little
#   G1 X2.5 Y20 Z0.25 F1500.0 E20   # extrude the second line
#   G92 E0                          # zero/reset extruder
#   G1 Z2.0 E-0.1 F3000             # move nozzle up and retract tiny bit
#   G92 E0 

# [gcode_macro PURGE_LINE]
# description: Purge nozzle front left
# gcode:
#   ##### get user defines #####
#   {% set start_xy = printer['gcode_macro _USER_VARIABLE'].prime_start_xy %}
#   {% set dir = printer['gcode_macro _USER_VARIABLE'].prime_dir|string %}
#   {% set lenght = printer['gcode_macro _USER_VARIABLE'].prime_lenght|float %}
#   {% set seg = printer['gcode_macro _USER_VARIABLE'].prime_seg|int %}
#   {% set extrude_per_seg = printer['gcode_macro _USER_VARIABLE'].prime_extrude_per_seg|float %}
#   {% set prime_z = printer['gcode_macro _USER_VARIABLE'].prime_z|float %}
#   {% set move_between_lines = printer['gcode_macro _USER_VARIABLE'].prime_dist|float %}
#   {% set z_hop = printer['gcode_macro _USER_VARIABLE'].z_hop|float %}
#   ##### get toolhead position #####
#   {% set act_z = printer.toolhead.position.z|float %}
#   ##### calculate prime line moves #####
#   {% set seg_delta = lenght / seg %}
#   {% if dir == 'X+' %}
#     {% set first_line = 'X%s E%s F1500' % (seg_delta, extrude_per_seg) %}
#     {% set second_line = 'X-%s E%s F1500' % (seg_delta, extrude_per_seg) %}
#     {% set move_to_side = 'Y%s' % (move_between_lines) %}
#   {% elif dir == 'X-' %}
#     {% set first_line = 'X-%s E%s F1500' % (seg_delta, extrude_per_seg) %}
#     {% set second_line = 'X%s E%s F1500' % (seg_delta, extrude_per_seg) %}
#     {% set move_to_side = 'Y%s' % (move_between_lines) %}
#   {% elif dir == 'Y+' %}
#     {% set first_line = 'Y%s E%s F1500' % (seg_delta, extrude_per_seg) %}
#     {% set second_line = 'Y-%s E%s F1500' % (seg_delta, extrude_per_seg) %}
#    {% set move_to_side = 'X%s' % (move_between_lines) %}
#   {% elif dir == 'Y-' %}
#     {% set first_line = 'Y-%s E%s F1500' % (seg_delta, extrude_per_seg) %}
#     {% set second_line = 'Y%s E%s F1500' % (seg_delta, extrude_per_seg) %}
#     {% set move_to_side = 'X%s' % (move_between_lines) %}
#   {% else %}
#     {action_raise_error("_USER_VARIABLE.prime_dir is not spezified as X+, X-, Y+ or Y-")}
#   {% endif %} 
#   ##### end of definitions #####
#   #SAVE_GCODE_STATE NAME=STATE_PRIME_LINE
#   _PRINT_AR T="Prime Line" SHOW_LCD=true
#   _CG28                                   ; home if not already homed
#   G92 E0                                  ; reset Extruder
#   G90                                     ; absolute positioning
#   {% if act_z < z_hop %}
#     G1 Z{z_hop} F900                      ; move head up
#   {% endif %}
#   G1 X{start_xy[0]} Y{start_xy[1]} F10000 ; move to start position
#   G1 Z{prime_z} F900                      ; move Z Axis down
#   G91                                     ; relative positioning
#   {% for segment in range(seg) %}         ; draw the first line
#     G1 {first_line}
#   {% endfor %}    
#   G1 X{move_to_side}                     ; move to side
#   {% for segment in range(seg) %}        ; draw the second line
#     G1 {second_line}
#   {% endfor %}
#   G1 Z{z_hop} F1500                      ; move Z Axis up
#   G92 E0                                 ; reset Extruder
#   G90
#   M83
# #  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
#   #RESTORE_GCODE_STATE NAME=STATE_PRIME_LINE